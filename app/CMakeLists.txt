INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)

# determine install rpath
SET(LIB_INSTALL_PATH "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}")
LIST(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${LIB_INSTALL_PATH}" isSystemDir)
IF("${isSystemDir}" STREQUAL "-1")
	SET(BIN_INSTALL_RPATH "${LIB_INSTALL_PATH}")
ENDIF("${isSystemDir}" STREQUAL "-1")
UNSET(LIB_INSTALL_PATH)
UNSET(isSystemDir)

ADD_EXECUTABLE(charon charon.cpp)
TARGET_LINK_LIBRARIES(charon charon-plugins)
SET_TARGET_PROPERTIES(charon PROPERTIES
	OUTPUT_NAME_DEBUG charon_d
	INSTALL_RPATH "${BIN_INSTALL_RPATH}"
	FOLDER "charon-core"
)
INSTALL(
	TARGETS      charon
	EXPORT       ${PROJECT_NAME}
	RUNTIME      DESTINATION bin${BIN_SUFFIX}
	LIBRARY      DESTINATION lib${LIB_SUFFIX}
	ARCHIVE      DESTINATION lib${LIB_SUFFIX}
	COMPONENT    applications
)

OPTION(USE_GETOPT "Use system getopt, build own one if disabled" ${UNIX})
IF(NOT USE_GETOPT)
	ADD_DEFINITIONS(-DSTANDALONE_GETOPT)
	ADD_LIBRARY(getopt STATIC getopt.c getopt_standalone.h)
	TARGET_LINK_LIBRARIES(charon getopt)
	SET_TARGET_PROPERTIES(getopt PROPERTIES FOLDER "charon-core")
ENDIF(NOT USE_GETOPT)
