<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
	"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<refentry>
	<refentryinfo>
		<title>Charon XML helper</title>
		<productname>charon-utils</productname>
		<releaseinfo role="version">0.1.4</releaseinfo>
		<authorgroup>
			<author>
				<firstname>Jens-Malte</firstname>
				<surname>Gottfried</surname>
				<contrib>
					Wrote this simple xml charon-module-detector and
					this manpage.
				</contrib>
				<address><email>jmgottfried@web.de</email></address>
			</author>
		</authorgroup>
		<copyright>
			<year>2011</year>
			<holder>Jens-Malte Gottfried</holder>
		</copyright>
		<legalnotice>
			<para>This application is part of Charon.</para>
			<para>
				Charon is free software: you can redistribute it and/or modify
				it under the terms of the GNU Lesser General Public License as
				published by the Free Software Foundation, either version 3 of
				the License, or (at your option) any later version.
			</para>
			<para>
				Charon is distributed in the hope that it will be useful,
				but WITHOUT ANY WARRANTY; without even the implied warranty of
				MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
				GNU Lesser General Public License for more details.
			</para>
			<para>
				You should have received a copy of the GNU Lesser General
				Public License along with Charon.
				If not, see
				<ulink url="http://www.gnu.org/licenses/"/>.
			</para>
		</legalnotice>
	</refentryinfo>
	<refmeta>
		<refentrytitle>charon xml helper</refentrytitle>
		<manvolnum>1</manvolnum>
	</refmeta>
	<refnamediv>
		<refname>charon-xml-helper</refname>
		<refpurpose>detect charon modules from doxygen xml files</refpurpose>
	</refnamediv>
	<refsynopsisdiv>
		<cmdsynopsis>
			<command>charon-xml-helper</command>
			<arg choice="opt"><replaceable>DocXmlDir</replaceable></arg>
			<group choice="opt">
				<arg choice="plain"><option>--ids</option></arg>
				<arg choice="plain"><option>--mod-index</option></arg>
				<arg choice="plain"><option>--xcheck</option></arg>
			</group>
		</cmdsynopsis>
	</refsynopsisdiv>
	<refsect1 id="description">
		<title>Description</title>
		<para><command>charon-xml-helper</command> reads the xml files
		generated by <application>doxygen</application>.
		Checks all classes contained in the class index, if they subclass
		ParameteredObject. If called without arguments,
		<command>charon-xml-helper</command> gives a short option summary.
		</para>
	</refsect1>
	<refsect1 id="options">
		<title>Options</title>
		<variablelist>
			<varlistentry>
				<term><replaceable>DocXmlDir</replaceable></term>
				<listitem><para>
					Directory where the doxygen xml documentation is located.
					In this directory, there is a file named
					<filename>index.xml</filename>.
					If there is no such file, the program terminates.
					If no directory is specified, an option summary is printed.
				</para></listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--ids</option></term>
				<listitem><para>
					Do not show the class names but the doxygen ids by the
					classes that are detected to be modules.
					This is useful for scripting to iterate over the
					doxygen files which use these ids as filename.
				</para></listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--mod-index</option></term>
				<listitem><para>
					Generate modified class index xml file filtered by detected
					charon module classes.
					Simply drops all entries from index.xml wich do not meet
					this condition.
					The resulting xml file is printed on stdout.
				</para></listitem>
			</varlistentry>
			<varlistentry>
				<term><option>--xcheck</option></term>
				<listitem>
					<para>
						Cross check group of charon modules and objects
						that inherit ParameteredObject.
						Prints out differences between list of potential module
						classes and charon-modules group content.
					</para>
					<para>
						All items within the charon-modules group should
						be real modules, i.e. if items of that group are found
						that do not inherit ParameteredObject, something
						is wrong.
						Remove these items from the charon-modules group.
					</para>
					<para>
						The other way round is ok, e.g. abstract base classes
						may inherit ParameteredObject and so are detected
						as module candidates but since they cannot be
						instanciated, they are no real modules.
					</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsect1>
</refentry>

