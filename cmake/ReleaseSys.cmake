# enable release system
SET(CPACK_PACKAGE_VENDOR "Heidelberg Collaboratory for Image Processing")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Configuration Graph Tools")

# package version setup
STRING(REGEX REPLACE "^([0-9]+)\\.[0-9]+\\.[0-9]+" "\\1"
	CPACK_PACKAGE_VERSION_MAJOR "${${PROJECT_NAME}_VERSION}")
STRING(REGEX REPLACE "^[0-9]+\\.([0-9])+\\.[0-9]+" "\\1"
	CPACK_PACKAGE_VERSION_MINOR "${${PROJECT_NAME}_VERSION}")
STRING(REGEX REPLACE "^[0-9]+\\.[0-9]+\\.([0-9]+)" "\\1"
	CPACK_PACKAGE_VERSION_PATCH "${${PROJECT_NAME}_VERSION}")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY     "${PROJECT_NAME}")
SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY  "${PROJECT_NAME}")
SET(CPACK_RESOURCE_FILE_LICENSE         "${PROJECT_SOURCE_DIR}/COPYING.txt")
SET(CPACK_RESOURCE_FILE_README          "${PROJECT_SOURCE_DIR}/README.txt")
SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${PROJECT_NAME}-${${PROJECT_NAME}_VERSION}")

SET(CPACK_PACKAGE_EXECUTABLES
	paramedit "Configuration Graph Editor"
	paraminspector "ParameterFile Editor"
)
SET(CPACK_STRIP_FILES FALSE)
SET(CPACK_SOURCE_IGNORE_FILES
	.svn
	./*/.svn
	".#"
	"#.*~"
)
SET(CPACK_PACKAGE_CONTACT "Jens-Malte Gottfried <jmgottfried@web.de>")
SET(QT_VERSION "${QT_VERSION_MAJOR}.${QT_VERSION_MINOR}.${QT_VERSION_PATCH}")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS
	"charon-core (>=${charon-core_VERSION})")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS
	"${CPACK_DEBIAN_PACKAGE_DEPENDS}, libgraphviz-dev (>=${Graphviz_VERSION})")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS
	"${CPACK_DEBIAN_PACKAGE_DEPENDS}, qt4-dev-tools (>=${QT_VERSION})")

# install components
SET(CPACK_COMPONENTS_ALL applications dlls)

# Display name properties
SET(CPACK_COMPONENT_APPLICATIONS_DISPLAY_NAME "Applications")
SET(CPACK_COMPONENT_DLLS_DISPLAY_NAME         "Needed DLLs")

# Descriptions
SET(CPACK_COMPONENT_APPLICATIONS_DESCRIPTION
	"paramedit and paraminspector executables")
SET(CPACK_COMPONENT_DLLS_DESCRIPTION
	"Qt dlls, C++ runtime; needed if you have no build environment installed")

# grouping
SET(CPACK_COMPONENT_APPLICATIONS_GROUP  Runtime)
SET(CPACK_COMPONENT_DLLS_GROUP          Runtime)

SET(CPACK_COMPONENT_GROUP_RUNTIME_DESCRIPTION
	"applications and shared libraries")

# preselections
SET(CPACK_COMPONENT_APPLICATIONS_REQUIRED   On)

# add optional documentation if avaiable
IF(ENABLE_DOC)
	LIST(APPEND CPACK_COMPONENTS_ALL htmldoc)
	SET(CPACK_COMPONENT_HTMLDOC_DISPLAY_NAME "HTML Documentation")
	SET(CPACK_COMPONENT_HTMLDOC_DESCRIPTION
		"HTML Documentation (including API doc)")
	SET(CPACK_COMPONENT_HTMLDOC_GROUP "Documentation")
	SET(CPACK_COMPONENT_GROUP_DOCUMENTATION_DESCRIPTION
		"doxygen generated manual and api documentation")

	# separate pdf documentation
	IF(LATEX_COMPILER)
		LIST(APPEND CPACK_COMPONENTS_ALL pdfdoc)
		SET(CPACK_COMPONENT_PDFDOC_DISPLAY_NAME "PDF Documentation")
		SET(CPACK_COMPONENT_PDFDOC_DESCRIPTION
			"PDF Documentation (without API doc)")
		SET(CPACK_COMPONENT_PDFDOC_GROUP "Documentation")
	ENDIF(LATEX_COMPILER)
ENDIF(ENABLE_DOC)

INCLUDE (CPack)
